#pragma once

constexpr auto XGOFFS_TC = 0x00; // Bit 7 PWR_MODE, bits 6:1 XG_OFFS_TC, bit 0 OTP_BNK_VLD
constexpr auto YGOFFS_TC = 0x01;
constexpr auto ZGOFFS_TC = 0x02;
constexpr auto X_FINE_GAIN = 0x03; // [7:0] fine gain
constexpr auto Y_FINE_GAIN = 0x04;
constexpr auto Z_FINE_GAIN = 0x05;
constexpr auto XA_OFFSET_H = 0x06; // User-defined trim values for accelerometer
constexpr auto XA_OFFSET_L_TC = 0x07;
constexpr auto YA_OFFSET_H = 0x08;
constexpr auto YA_OFFSET_L_TC = 0x09;
constexpr auto ZA_OFFSET_H = 0x0A;
constexpr auto ZA_OFFSET_L_TC = 0x0B;
constexpr auto SELF_TEST_X = 0x0D;
constexpr auto SELF_TEST_Y = 0x0E;
constexpr auto SELF_TEST_Z = 0x0F;
constexpr auto SELF_TEST_A = 0x10;
constexpr auto XG_OFFS_USRH = 0x13; // User-defined trim values for gyroscope; supported in MPU-6050?
constexpr auto XG_OFFS_USRL = 0x14;
constexpr auto YG_OFFS_USRH = 0x15;
constexpr auto YG_OFFS_USRL = 0x16;
constexpr auto ZG_OFFS_USRH = 0x17;
constexpr auto ZG_OFFS_USRL = 0x18;
constexpr auto SMPLRT_DIV = 0x19;
constexpr auto CONFIG = 0x1A;
constexpr auto GYRO_CONFIG = 0x1B;
constexpr auto ACCEL_CONFIG = 0x1C;
constexpr auto FF_THR = 0x1D; // Free-fall
constexpr auto FF_DUR = 0x1E; // Free-fall
constexpr auto MOT_THR = 0x1F; // Motion detection threshold bits [7:0]
constexpr auto MOT_DUR = 0x20; // Duration counter threshold for motion interrupt generation, 1 kHz rate, LSB = 1 ms
constexpr auto ZMOT_THR = 0x21; // Zero-motion detection threshold bits [7:0]
constexpr auto ZRMOT_DUR = 0x22; // Duration counter threshold for zero motion interrupt generation, 16 Hz rate, LSB = 64 ms
constexpr auto FIFO_EN = 0x23;
constexpr auto I2C_MST_CTRL = 0x24;
constexpr auto I2C_SLV0_ADDR = 0x25;
constexpr auto I2C_SLV0_REG = 0x26;
constexpr auto I2C_SLV0_CTRL = 0x27;
constexpr auto I2C_SLV1_ADDR = 0x28;
constexpr auto I2C_SLV1_REG = 0x29;
constexpr auto I2C_SLV1_CTRL = 0x2A;
constexpr auto I2C_SLV2_ADDR = 0x2B;
constexpr auto I2C_SLV2_REG = 0x2C;
constexpr auto I2C_SLV2_CTRL = 0x2D;
constexpr auto I2C_SLV3_ADDR = 0x2E;
constexpr auto I2C_SLV3_REG = 0x2F;
constexpr auto I2C_SLV3_CTRL = 0x30;
constexpr auto I2C_SLV4_ADDR = 0x31;
constexpr auto I2C_SLV4_REG = 0x32;
constexpr auto I2C_SLV4_DO = 0x33;
constexpr auto I2C_SLV4_CTRL = 0x34;
constexpr auto I2C_SLV4_DI = 0x35;
constexpr auto I2C_MST_STATUS = 0x36;
constexpr auto INT_PIN_CFG = 0x37;
constexpr auto INT_ENABLE = 0x38;
constexpr auto DMP_INT_STATUS = 0x39; // Check DMP interrupt
constexpr auto INT_STATUS = 0x3A;
constexpr auto ACCEL_XOUT_H = 0x3B;
constexpr auto ACCEL_XOUT_L = 0x3C;
constexpr auto ACCEL_YOUT_H = 0x3D;
constexpr auto ACCEL_YOUT_L = 0x3E;
constexpr auto ACCEL_ZOUT_H = 0x3F;
constexpr auto ACCEL_ZOUT_L = 0x40;
constexpr auto TEMP_OUT_H = 0x41;
constexpr auto TEMP_OUT_L = 0x42;
constexpr auto GYRO_XOUT_H = 0x43;
constexpr auto GYRO_XOUT_L = 0x44;
constexpr auto GYRO_YOUT_H = 0x45;
constexpr auto GYRO_YOUT_L = 0x46;
constexpr auto GYRO_ZOUT_H = 0x47;
constexpr auto GYRO_ZOUT_L = 0x48;
constexpr auto EXT_SENS_DATA_00 = 0x49;
constexpr auto EXT_SENS_DATA_01 = 0x4A;
constexpr auto EXT_SENS_DATA_02 = 0x4B;
constexpr auto EXT_SENS_DATA_03 = 0x4C;
constexpr auto EXT_SENS_DATA_04 = 0x4D;
constexpr auto EXT_SENS_DATA_05 = 0x4E;
constexpr auto EXT_SENS_DATA_06 = 0x4F;
constexpr auto EXT_SENS_DATA_07 = 0x50;
constexpr auto EXT_SENS_DATA_08 = 0x51;
constexpr auto EXT_SENS_DATA_09 = 0x52;
constexpr auto EXT_SENS_DATA_10 = 0x53;
constexpr auto EXT_SENS_DATA_11 = 0x54;
constexpr auto EXT_SENS_DATA_12 = 0x55;
constexpr auto EXT_SENS_DATA_13 = 0x56;
constexpr auto EXT_SENS_DATA_14 = 0x57;
constexpr auto EXT_SENS_DATA_15 = 0x58;
constexpr auto EXT_SENS_DATA_16 = 0x59;
constexpr auto EXT_SENS_DATA_17 = 0x5A;
constexpr auto EXT_SENS_DATA_18 = 0x5B;
constexpr auto EXT_SENS_DATA_19 = 0x5C;
constexpr auto EXT_SENS_DATA_20 = 0x5D;
constexpr auto EXT_SENS_DATA_21 = 0x5E;
constexpr auto EXT_SENS_DATA_22 = 0x5F;
constexpr auto EXT_SENS_DATA_23 = 0x60;
constexpr auto MOT_DETECT_STATUS = 0x61;
constexpr auto I2C_SLV0_DO = 0x63;
constexpr auto I2C_SLV1_DO = 0x64;
constexpr auto I2C_SLV2_DO = 0x65;
constexpr auto I2C_SLV3_DO = 0x66;
constexpr auto I2C_MST_DELAY_CTRL = 0x67;
constexpr auto SIGNAL_PATH_RESET = 0x68;
constexpr auto MOT_DETECT_CTRL = 0x69;
constexpr auto USER_CTRL = 0x6A;  // Bit 7 enable DMP, bit 3 reset DMP
constexpr auto PWR_MGMT_1 = 0x6B; // Device defaults to the SLEEP mode
constexpr auto PWR_MGMT_2 = 0x6C;
constexpr auto DMP_BANK = 0x6D;  // Activates a specific bank in the DMP
constexpr auto DMP_RW_PNT = 0x6E;  // Set read/write pointer to a specific start address in specified DMP bank
constexpr auto DMP_REG = 0x6F;  // Register in DMP from which to read or to which to write
constexpr auto DMP_REG_1 = 0x70;
constexpr auto DMP_REG_2 = 0x71;
constexpr auto FIFO_COUNTH = 0x72;
constexpr auto FIFO_COUNTL = 0x73;
constexpr auto FIFO_R_W = 0x74;
constexpr auto WHO_AM_I_MPU6050 = 0x75; // Should return 0x68
